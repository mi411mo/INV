<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RTS.Invoicing.Domain</name>
    </assembly>
    <members>
        <member name="T:RTS.Invoicing.Domain.Common.AggregateRoot`1">
            <summary>
            Base class for aggregate roots. An aggregate root is a specific type of entity that acts as the entry point to an aggregate.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Common.AggregateRoot`1._domainEvents">
            <summary>
            The domain events holder.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.AggregateRoot`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Common.AggregateRoot`1"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.AggregateRoot`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Common.AggregateRoot`1"/> class.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.AggregateRoot`1.DomainEvents">
            <summary>
            Gets the domain events collection.
            </summary>
            <value>The domain events collection.</value>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.AggregateRoot`1.RaiseDomainEvent(RTS.Invoicing.Domain.Contracts.Events.IDomainEvent)">
            <summary>
            Adds the domain event into the domain event collection.
            </summary>
            <param name="domainEvent">The domain event.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.AggregateRoot`1.ClearDomainEvents">
            <summary>
            Clears the domain events.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.AuditableEntity`1.CreatedAt">
            <summary>
            Gets or sets the date and time when this entity was first created.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.AuditableEntity`1.ModifiedAt">
            <summary>
            Gets or sets the date and time when this entity was last modified.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.BaseDomainEvent.Id">
            <inheritdoc />
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.BaseDomainEvent.OccurredOn">
            <inheritdoc />
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.BaseDomainEvent.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Common.BaseDomainEvent"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="F:RTS.Invoicing.Domain.Common.Constants.MAX_PREFIX_CHARACTERS">
            <summary>
            The maximum prefix characters allowed.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Common.Constants.MAX_CUSTOM_FIELDS_CHARACTERS">
            <summary>
            The maximum custom fields characters allowed.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Common.Constants.MIN_CUSTOM_FIELDS_CHARACTERS">
            <summary>
            The minimum custom fields characters allowed
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Common.Constants.MAX_CUSTOM_FIELD_VALUE_CHARACTERS">
            <summary>
            The maximum custom field value characters allowed.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Common.Entity`1">
            <summary>
            Base class for domain entities.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Common.Result">
            <summary>
            Represents the result of an operation, which can either be successful or failed.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.Result.#ctor(System.Boolean,RTS.Invoicing.Domain.Common.Error)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Common.Result"/> class.
            </summary>
            <param name="isSuccess">if set to <c>true</c> [is success].</param>
            <param name="error">The error.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.Result.IsSuccess">
            <summary>
            Gets a value represent whether the operation was successful.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.Result.IsFailure">
            <summary>
            Gets a value represent whether the operation failed.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.Result.Error">
            <summary>
            Gets the error associated with a failed operation.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.Result.Success">
            <summary>
            Create a success result.
            </summary>
            <returns>A <see cref="T:RTS.Invoicing.Domain.Common.Result"/> instance indicating success result.</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.Result.Success``1(``0)">
            <summary>
            Create a success result with specific value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.Result.Failure(RTS.Invoicing.Domain.Common.Error)">
            <summary>
            Create a failure result.
            </summary>
            <param name="error">The error occurred.</param>
            <returns>A <see cref="T:RTS.Invoicing.Domain.Common.Result"/> instance indicating failure result.</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.Result.Failure``1(RTS.Invoicing.Domain.Common.Error)">
            <summary>
            Create a failure result.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="error">The error.</param>
            <returns></returns>
        </member>
        <member name="T:RTS.Invoicing.Domain.Common.Result`1">
            <summary>
            Represents a successful or failed result of an operation with a value.
            </summary>
            <typeparam name="TValue">The type of the value in the result.</typeparam>
        </member>
        <member name="F:RTS.Invoicing.Domain.Common.Result`1._value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.Result`1.#ctor(`0,System.Boolean,RTS.Invoicing.Domain.Common.Error)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Common.Result`1"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="isSuccess">if set to <c>true</c> [is success].</param>
            <param name="error">The error.</param>
            <exception cref="T:System.InvalidOperationException">A success result cannot be created with null value.</exception>
        </member>
        <member name="P:RTS.Invoicing.Domain.Common.Result`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
            <exception cref="T:System.InvalidOperationException">The value of failure cannot be accessed</exception>
        </member>
        <member name="M:RTS.Invoicing.Domain.Common.Result`1.op_Implicit(`0)~RTS.Invoicing.Domain.Common.Result{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:RTS.Invoicing.Domain.Common.Result`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="P:RTS.Invoicing.Domain.Contracts.Events.IDomainEvent.Id">
            <summary>
            Gets or sets the domain event identifier.
            </summary>
            <value>The event identifier.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Contracts.Events.IDomainEvent.OccurredOn">
            <summary>
            Gets when the event occurred on.
            </summary>
            <value>When the event occurred.</value>
        </member>
        <member name="T:RTS.Invoicing.Domain.Contracts.Repositories.Base.IRepository`1">
            <summary>
            Defines a standard contract for basic data access operations (CRUD) for a specific type of Domain Entity.
            </summary>
            <typeparam name="TEntity">The type of the domain entity (which typically inherits from <c>Entity</c>) that the repository manages.</typeparam>
        </member>
        <member name="M:RTS.Invoicing.Domain.Contracts.Repositories.Base.IRepository`1.GetByIdAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Retrieves a single entity asynchronously based on its unique primary identifier.
            </summary>
            <param name="id">The unique identifier of the entity (of type long).</param>
            <param name="cancellationToken">A token to monitor for cancellation requests during the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> returning a <see cref="T:RTS.Invoicing.Domain.Common.Result`1"/> containing the entity on success, or an error on failure (e.g., Not Found).</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Contracts.Repositories.Base.IRepository`1.GetAllAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Retrieves a collection of entities asynchronously, often applying filtering logic based on the provided entity instance (used as a specification or criteria).
            </summary>
            <param name="entity">An instance of the entity type used to define specific query criteria or filters (e.g., retrieving all InvoiceItems associated with a specific Invoice).</param>
            <param name="cancellationToken">A token to monitor for cancellation requests during the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> returning a <see cref="T:RTS.Invoicing.Domain.Common.Result`1"/> containing a collection of entities on success.</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Contracts.Repositories.Base.IRepository`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Persists a new entity asynchronously to the data store.
            </summary>
            <param name="entity">The entity instance to add.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests during the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> returning a parameterless <see cref="T:RTS.Invoicing.Domain.Common.Result"/> indicating success or failure of the insertion.</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Contracts.Repositories.Base.IRepository`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates the state of an existing entity asynchronously in the data store.
            </summary>
            <param name="entity">The entity instance containing the updated data.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests during the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> returning a parameterless <see cref="T:RTS.Invoicing.Domain.Common.Result"/> indicating success or failure of the update operation.</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Contracts.Repositories.Base.IRepository`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified entity asynchronously from the data store.
            </summary>
            <param name="entity">The entity instance to be deleted.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests during the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> returning a parameterless <see cref="T:RTS.Invoicing.Domain.Common.Result"/> indicating success or failure of the deletion operation.</returns>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog">
            <summary>
            Represents a single record of an auditable change, creation, or deletion event within the system.
            This entity tracks who performed an action, on what entity, and what the data changed from/to.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog"/> class from being created.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.#ctor(RTS.Invoicing.Domain.Entities.AuditLogs.AuditLogId,System.Nullable{System.Int64},System.DateTime,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog"/> class with all necessary audit information.
            </summary>
            <param name="id">The identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="entityName">Name of the entity.</param>
            <param name="action">The action.</param>
            <param name="oldValues">The old values.</param>
            <param name="newValues">The new values.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.UserId">
            <summary>
            Gets or sets the unique identifier of the user who initiated the change.
            It is nullable because some system actions may not be tied to a specific user.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.TimeStamp">
            <summary>
            Gets or sets the date and time when the auditable action occurred.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.EntityId">
            <summary>
            Gets or sets the string representation of the primary key (ID) of the entity that was affected by the action.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.EntityName">
            <summary>
            Gets or sets the type name of the affected entity (e.g., 'Invoice', 'Customer').
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.Action">
            <summary>
            Gets or sets the action performed on the entity (e.g., Create, Update, Delete).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.OldValues">
            <summary>
            Gets or sets the serialized data representing the state of the entity *before* the action occurred (for updates/deletes).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.AuditLogs.AuditLog.NewValues">
            <summary>
            Gets or sets the serialized data representing the state of the entity *after* the action occurred (for creates/updates).
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Customers.Customer">
            <summary>
            Represents a customer within the invoicing system, identified uniquely and linked to a specific merchant.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Customers.Customer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Customers.Customer"/> entity.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Customers.Customer.#ctor(RTS.Invoicing.Domain.Entities.Customers.CustomerId,RTS.Invoicing.Domain.Entities.Customers.PersonId)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Customers.Customer"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="personId">The person identifier.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Customer.PersonId">
            <summary>
            Gets or sets the unique identifier of the person who owns this customer record.
            This establishes the relationship to the parent Merchant entity (or Aggregate Root).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Customer.IsDeleted">
            <summary>
            Gets or sets a value indicating whether the customer record is soft-deleted.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Customer.CustomerReference">
            <summary>
            Gets or sets a merchant-specific, unique reference code or number for the customer.
            This provides a business-friendly, external identifier.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Customer.Person">
            <summary>
            Gets or sets the customer identity.
            </summary>
            <value>The person identity.</value>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Customers.Customer.Create(RTS.Invoicing.Domain.Entities.Customers.PersonId)">
            <summary>
            Creates the specified customer with person identifier.
            </summary>
            <param name="personId">The person identifier.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Customers.Customer.SetReference(System.String)">
            <summary>
            Sets the merchant-specific customer reference.
            </summary>
            <param name="reference">The customer reference.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Customers.Customer.Delete">
            <summary>
            Marks the customer as deleted. This is a soft delete.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Customers.Person">
            <summary>
            Represent the person entity.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Customers.Person.#ctor(RTS.Invoicing.Domain.Entities.Customers.PersonId,System.String,System.String,RTS.Invoicing.Domain.ValueObjects.Email,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Customers.Person"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="arabicName">Person Arabic name.</param>
            <param name="englishName">Person English name.</param>
            <param name="email">The email.</param>
            <param name="phone">The phone.</param>
            <param name="address">The address.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Person.ArabicName">
            <summary>
            Gets or sets the person's name in Arabic.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Person.EnglishName">
            <summary>
            Gets or sets the person's name in English.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Person.Email">
            <summary>
            Gets or sets the person's email address.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Person.Phone">
            <summary>
            Gets or sets the person's phone number.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Customers.Person.Address">
            <summary>
            Gets or sets the person's physical address details.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Customers.Person.Create(System.String,System.String,RTS.Invoicing.Domain.ValueObjects.Email,System.String,System.String)">
            <summary>
            Creates the specified person.
            </summary>
            <param name="arabicName">Person Arabic name.</param>
            <param name="englishName">Person English name.</param>
            <param name="email">The email.</param>
            <param name="phone">The phone.</param>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceStatus">
            <summary>
            Represents the distinct lifecycle states of an invoice.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceStatus.Draft">
            <summary>
            The invoice is being prepared and can be edited. It has no financial impact yet.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceStatus.Sent">
            <summary>
            The invoice has been finalized and sent to the customer. It is now awaiting payment.
            This is an Accounts Receivable entry.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceStatus.PartiallyPaid">
            <summary>
            A partial payment has been received, but a balance remains.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceStatus.Paid">
            <summary>
            The invoice has been paid in full. This is a terminal state.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceStatus.Overdue">
            <summary>
            The due date has passed, and the invoice has not been fully paid.
            This status can trigger reminder workflows or late fees.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceStatus.Void">
            <summary>
            The invoice was cancelled before being paid. It is non-payable and has no financial value.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceType">
            <summary>
            Defines the legal and financial nature of an invoice document.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceType.StandardInvoice">
            <summary>
            A standard commercial document issued by a merchant (seller) to a customer (buyer), indicating the products, quantities, and agreed prices for products or services.
            This document increases the amount owed by the customer.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceType.CreditNote">
            <summary>
            A commercial document issued by a merchant (seller) to a customer (buyer) to reduce the amount owed from an earlier invoice.
            It is used for returns, corrections, or allowances. This document has a negative value.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Invoices.Enums.InvoiceType.DebitNote">
            <summary>
            A commercial document issued by a seller to a customer (buyer) to increase the amount owed from an earlier invoice.
            Used to correct an under-billing. This document has a positive value.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Invoices.Invoice">
            <summary>
            Core Invoice entity representing the essential invoice data structure 
            for any e-invoicing system integration.
            </summary> 
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Invoices.Invoice"/> aggregate root.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.#ctor(RTS.Invoicing.Domain.Entities.Invoices.InvoiceId,RTS.Invoicing.Domain.Entities.Merchants.MerchantId,RTS.Invoicing.Domain.Entities.Customers.CustomerId,RTS.Invoicing.Domain.ValueObjects.InvoiceNumber,System.DateTime,System.DateTime,System.String,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Invoices.Invoice"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="invoiceNumber">The invoice number.</param>
            <param name="merchantId">The merchant identifier.</param>
            <param name="customerId">The customer identifier.</param>
            <param name="issueDate">The issue date.</param>
            <param name="dueDate">The due date.</param>
            <param name="currencyCode">The currency code.</param>
            <param name="exchangeRate">The exchange rate.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.GlobalId">
            <summary>
            Gets or sets the global identifier for this invoice to be exposed to public.
            </summary>
            <value>The global identifier.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.InvoiceNumber">
            <summary>
            Gets or sets the sequential, human-readable identifier for the invoice (e.g., INV-2024-0001).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.OriginalInvoiceId">
            <summary>
            Gets or sets the original invoice identifier.
            </summary>
            <value>The original invoice identifier.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.MerchantId">
            <summary>
            Gets or sets the unique identifier of the merchant who issued the invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.CustomerId">
            <summary>
            Gets or sets the unique identifier of the customer receiving the invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Type">
            <summary>
            Gets or sets the type of this invoice.
            </summary>
            <value>The invoice type.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Status">
            <summary>
            Gets or sets the current status of the invoice (e.g., 'Draft', 'Paid', 'Cancelled').
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.IssueDate">
            <summary>
            Gets or sets the date the invoice was officially issued.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.DueDate">
            <summary>
            Gets or sets the date by which the payment is due.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.CurrencyCode">
            <summary>
            Gets or sets the three-letter ISO 4217 currency code for all monetary amounts on the invoice (e.g., "YER", "SAR").
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Currency">
            <summary>
            Gets the currency of this invoice.
            </summary>
            <value>The currency of this invoice.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.SubTotal">
            <summary>
            Gets or sets the subtotal amount of all invoice items before tax and discounts are applied.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.TotalTax">
            <summary>
            Gets or sets the total tax amount applied to the invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.DiscountAmount">
            <summary>
            Gets or sets the total discount amount applied to the invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.AmountPaid">
            <summary>
            Gets the amount that has been paid.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.TotalAmount">
            <summary>
            Gets or sets the final total amount the customer must pay (TotalSub + TotalTax - Discount).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.ExchangeRate">
            <summary>
            Gets or sets the exchange rate used if the invoice currency differs from the merchant's base currency.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Notes">
            <summary>
            Gets or sets optional notes or terms and conditions for the invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.IsDeleted">
            <summary>
            Gets or sets a value indicating whether the invoice record has been soft-deleted.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.ConcurrencyToken">
            <summary>
            Gets or sets the concurrency token (RowVersion) used for optimistic locking.
            </summary>
            <remarks>
            The <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute"/> on this property signals to the ORM 
            that this value should be automatically managed by the database, typically 
            using a timestamp or rowversion column, to detect concurrent updates.
            This prevents "last-in wins" data corruption.
            </remarks>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Merchant">
            <summary>
            Gets or sets the navigation property to the <see cref="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Merchant"/> who issued this invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Customer">
            <summary>
            Gets or sets the navigation property to the <see cref="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Customer"/> who is billed by this invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.OriginalInvoice">
            <summary>
            Gets or sets the original invoice entity.
            </summary>
            <value>The original invoice.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.InvoiceItems">
            <summary>
            Gets or sets the collection of items included in this invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.Invoice.InvoiceCustomFields">
            <summary>
            Gets or sets the collection of invoice custom fields.
            </summary>
            <value>The invoice custom fields.</value>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.CreateStandardInvoice(RTS.Invoicing.Domain.Entities.Merchants.MerchantId,RTS.Invoicing.Domain.Entities.Customers.CustomerId,RTS.Invoicing.Domain.ValueObjects.InvoiceNumber,System.DateTime,System.Int32,System.String,System.Decimal)">
            <summary>
            Creates a new, standard invoice in a valid initial state.
            </summary>
            <param name="merchantId">The merchant identifier.</param>
            <param name="customerId">The customer identifier.</param>
            <param name="invoiceNumber">The invoice number.</param>
            <param name="issueDate">The issue date.</param>
            <param name="dueDays">Due days.</param>
            <param name="currencyCode">The currency code.</param>
            <param name="exchangeRate">The exchange rate.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.AddItem(System.Int16,System.String,System.Int32,System.Decimal,System.Decimal,System.Collections.Generic.IEnumerable{RTS.Invoicing.Domain.Entities.Merchants.Tax})">
            <summary>
            Adds an item to the invoice and recalculates totals.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.RemoveItem(RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemId)">
            <summary>
            Removes the invoice item from the.
            </summary>
            <param name="itemId">The item identifier.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.UpdateItem(RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemId,System.Int16,System.String,System.Int32,System.Decimal,System.Decimal)">
            <summary>
            Updates the invoice item information.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="itemOrder">The item order.</param>
            <param name="description">The description.</param>
            <param name="quantity">The quantity.</param>
            <param name="unitPrice">The unit price.</param>
            <param name="discountAmount">The discount amount.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.ApplyTaxForInvoiceItem(RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemId,System.Collections.Generic.IEnumerable{RTS.Invoicing.Domain.Entities.Merchants.Tax})">
            <summary>
            Applies a tax or more to a specific item in this invoice.
            </summary>
            <param name="itemId">The invoice item identifier.</param>
            <param name="taxes">Taxes to be applied.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.ApplyInvoiceDiscount(System.Decimal)">
            <summary>
            Applies a discount to the entire invoice.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.UpdateNotes(System.String)">
            <summary>
            Updates the invoice notes only if it is Draft.
            </summary>
            <param name="notes">The notes.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.MarkAsSent">
            <summary>
            Marks the invoice as sent, finalizing it for payment.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.MarkAsOverdue(System.DateTime)">
            <summary>
            Checks the invoice status against the current date and marks it as overdue if necessary.
            This should be called by a background process or application service.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.ApplyPayment(RTS.Invoicing.Domain.ValueObjects.Money)">
            <summary>
            Applies a payment to the invoice, updating the AmountPaid and Status.
            This replaces the simple MarkAsPaid methods.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.Void">
            <summary>
            Voids the invoice, making it non-payable.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.SetCustomFieldValue(RTS.Invoicing.Domain.Entities.Merchants.CustomField,System.String)">
            <summary>
            Sets or updates the value for a custom field on this invoice.
            The aggregate root is responsible for enforcing type validation based on the CustomField definition.
            </summary>
            <param name="customField">The CustomField definition (retrieved from a repository).</param>
            <param name="value">The value to set, as a string.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.UpdateExchangeRate(System.Decimal)">
            <summary>
            Updates the exchange rate of a Draft invoice.
            </summary>
            <param name="newRate">The new exchange rate.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.RecalculateTotals">
            <summary>
            Recalculates Subtotal, TotalTax, and TotalAmount based on current items and taxes.
            This is the single source of truth for invoice calculations.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.Invoice.IsValueValidForType(System.String,RTS.Invoicing.Domain.Enums.CustomFieldsTypes)">
            <summary>
            Private helper to validate the string value against the required data type.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField">
            <summary>
            Represents the specific value assigned to a custom field for a particular invoice.
            This entity links an Invoice to a CustomField definition and stores the actual data value.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField"/> class.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField.#ctor(RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomFieldId,RTS.Invoicing.Domain.Entities.Invoices.InvoiceId,RTS.Invoicing.Domain.Entities.Merchants.CustomFieldId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="invoiceId">The invoice identifier.</param>
            <param name="customFieldId">The custom field identifier.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField.InvoiceId">
            <summary>
            Gets or sets the foreign key referencing the parent Invoice entity.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField.CustomFieldId">
            <summary>
            Gets or sets the foreign key referencing the definition of the custom field (<see cref="T:RTS.Invoicing.Domain.Entities.Merchants.CustomField"/>).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField.Value">
            <summary>
            Gets or sets the actual value entered by the user for this custom field instance.
            The type is <see cref="T:System.Object"/> because the underlying type is defined by the associated <see cref="P:RTS.Invoicing.Domain.Entities.Merchants.CustomField.Type"/>.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField.Create(RTS.Invoicing.Domain.Entities.Invoices.InvoiceId,RTS.Invoicing.Domain.Entities.Merchants.CustomFieldId,System.String)">
            <summary>
            Creates a new instance of an invoice custom field.
            This is internal to ensure only the Invoice aggregate can create it,
            after it has performed the necessary type validation.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceCustomField.UpdateValue(System.String)">
            <summary>
            Updates the value of the custom field.
            This method is internal to ensure only the parent Invoice aggregate can call it,
             allowing the aggregate to enforce rules (e.g., cannot modify a sent invoice).
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem">
            <summary>
            Represents a single line item within an invoice, detailing the quantity, pricing, and description of a service or product.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem" /> class.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.#ctor(RTS.Invoicing.Domain.Entities.Invoices.InvoiceId,System.Int16,System.String,System.Int32,RTS.Invoicing.Domain.ValueObjects.Money,RTS.Invoicing.Domain.ValueObjects.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem"/> class.
            </summary>
            <param name="invoiceId">The invoice identifier.</param>
            <param name="itemOrder">The item order.</param>
            <param name="description">The description.</param>
            <param name="quantity">The quantity.</param>
            <param name="unitPrice">The unit price.</param>
            <param name="discountAmount">The discount amount.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.InvoiceId">
            <summary>
            Gets or sets the foreign key referencing the parent Invoice entity.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.ItemOrder">
            <summary>
            Gets or sets the item order.
            This can help to order the items in a specific order.
            </summary>
            <value>The item order in the invoice.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.Description">
            <summary>
            Gets the detailed, customer-facing description of the service or product.
            </summary>
            <value>
            A string containing the description. This value cannot be null.
            </value>
            <remarks>
            This text is displayed directly on the invoice line item. It should be clear
            and concise for the recipient to easily understand the charge.
            </remarks>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.Quantity">
            <summary>
            Gets or sets the quantity of the item purchased or service rendered.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.UnitPrice">
            <summary>
            Gets or sets the price per unit of the item, excluding any taxes.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.TotalPrice">
            <summary>
            Gets or sets the calculated total price for this line item (Quantity * UnitPrice), excluding tax.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.DiscountAmount">
            <summary>
            Gets or sets the total discount amount applied to this invoice line item.
            This enables adding discounts per item for the invoice.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.Create(RTS.Invoicing.Domain.Entities.Invoices.InvoiceId,System.Int16,System.String,System.Int32,System.Decimal,System.Decimal,System.String)">
            <summary>
            Creates the specified invoice.
            </summary>
            <param name="invoiceId">The invoice identifier to link the item with.</param>
            <param name="itemOrder">The invoice item order in the list.</param>
            <param name="description">The description of the item (Display name).</param>
            <param name="quantity">The quantity of this item.</param>
            <param name="unitPrice">The item unit price.</param>
            <param name="discountAmount">The discount amount.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.UpdateDetails(System.Int16,System.String,System.Int32,System.Decimal,System.Decimal)">
            <summary>
            Updates the invoice item details.
            </summary>
            <param name="itemOrder">The item order.</param>
            <param name="description">The description.</param>
            <param name="quantity">The quantity.</param>
            <param name="unitPrice">The unit price.</param>
            <param name="discountAmount">The discount amount.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.UpdateItemOrder(System.Int16)">
            <summary>
            Updates the item order.
            </summary>
            <param name="itemOrder">The item order.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.ApplyTax(RTS.Invoicing.Domain.Entities.Merchants.Tax,System.String)">
            <summary>
            Applies a tax to the item.
            </summary>
            <param name="tax">The tax object.</param>
            <param name="currency">The currency.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.ApplyDiscount(System.Decimal)">
            <summary>
            Applies a discount to the item.
            </summary>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem.RecalculateTotals">
            <summary>
            Recalculates the totals.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax">
            <summary>
            Represents the link between an Invoice and a specific Tax, capturing the amount of tax applied.
            This entity often serves as a junction table in a many-to-many relationship.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax"/> entity.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax.InvoiceItemId">
            <summary>
            Gets or sets the foreign key referencing the parent Invoice entity.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax.TaxId">
            <summary>
            Gets or sets the foreign key referencing the <see cref="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax.Tax"/> entity that was applied.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax.TaxRateApplied">
            <summary>
            Gets or sets the tax rate from the Taxes table at the time of invoice creation.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax.TaxAmount">
            <summary>
            Gets or sets the calculated tax for this specific item line.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Invoices.InvoiceItemTax.Create(RTS.Invoicing.Domain.Entities.Invoices.InvoiceItem,RTS.Invoicing.Domain.Entities.Merchants.Tax,System.String)">
            <summary>
            Factory method to create an InvoiceItemTax instance. This is the only way to create this object.
            It centralizes the business logic for tax calculation.
            </summary>
            <param name="item">The parent invoice item.</param>
            <param name="tax">The tax to apply.</param>
            <param name="currency">The currency of the invoice.</param>
            <returns>A new, valid InvoiceItemTax object.</returns>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Merchants.CustomField">
            <summary>
            Represents a dynamic, user-defined custom field configuration within the system, scoped to a specific merchant.
            This entity allows for the definition of extra data fields without changing the core database schema.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.CustomField.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.CustomField"/> class from being created.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.CustomField.#ctor(RTS.Invoicing.Domain.Entities.Merchants.CustomFieldId,RTS.Invoicing.Domain.Entities.Merchants.MerchantId,System.String,RTS.Invoicing.Domain.Enums.CustomFieldsTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.CustomField"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="merchantId">The merchant identifier.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.CustomField.MerchantId">
            <summary>
            Gets or sets the unique identifier of the merchant who issued the invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.CustomField.Name">
            <summary>
            Gets or sets the name or label of the custom field as it should be displayed.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.CustomField.Type">
            <summary>
            Gets or sets the data type of the custom field (e.g., text, number, date).
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.CustomField.UpdateName(System.String)">
            <summary>
            Updates the name of the custom field.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.CustomField.IsValidCustomFieldNameLength(System.String)">
            <summary>
            Helper method to determines whether the specified name is valid custom field name.
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if [is valid custom field name] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence">
            <summary>
            Manages the numbering sequence configuration for invoices issued by a specific merchant.
            This entity tracks the prefix and the last used number to generate the next unique invoice number.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence"/> class from being created.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.#ctor(RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequenceId,RTS.Invoicing.Domain.Entities.Merchants.MerchantId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="merchantId">The merchant identifier.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.MerchantId">
            <summary>
            Gets or sets the unique identifier of the merchant who issued the invoice.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.Prefix">
            <summary>
            Gets or sets the static text prefix used for the invoice number (e.g., "INV-", "ABC-").
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.LastValue">
            <summary>
            Gets or sets the last numeric value used in the sequence.
            The next invoice number will typically be generated using: Prefix + (LastValue + 1).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.ConcurrencyToken">
            <summary>
            Gets or sets the concurrency token (RowVersion) used for optimistic locking.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.Create(RTS.Invoicing.Domain.Entities.Merchants.MerchantId,System.String)">
            <summary>
            Creates invoice sequence with the 
            </summary>
            <param name="merchantId">The merchant identifier.</param>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.InvoiceSequence.GetNextSequence">
            <summary>
            Gets the next sequence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.Merchant"/> class.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.#ctor(RTS.Invoicing.Domain.Entities.Merchants.MerchantId,System.String,System.String,RTS.Invoicing.Domain.ValueObjects.Currency)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.Merchant"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="arabicName">Merchant Arabic name.</param>
            <param name="englishName">Merchant English name.</param>
            <param name="defaultCurrency">The default currency code.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Merchant.ArabicName">
            <summary>
            Gets or sets the person's name in Arabic.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Merchant.EnglishName">
            <summary>
            Gets or sets the person's name in English.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Merchant.DefaultCurrency">
            <summary>
            Gets or sets the default currency code of the merchant.
            </summary>
            <value>The merchant default currency code. </value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Merchant.ConfigurationSettings">
            <summary>
            Gets or sets the merchant custom configuration settings.
            </summary>
            <value>The configuration settings.</value>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Merchant.IsActive">
            <summary>
            Gets or sets a value indicating whether this merchant is active.
            </summary>
            <value>
              <c>true</c> if this merchant is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.Create(System.String,System.String,System.String)">
            <summary>
            Creates the specified merchant.
            </summary>
            <param name="arabicName">Merchant Arabic name.</param>
            <param name="englishName">Merchant English name.</param>
            <param name="defaultCurrencyCode">The default currency code.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.UpdateConfigurationSettings(System.String)">
            <summary>
            Updates the configuration settings for the merchant.
            </summary>
            <param name="settingsAsJson">A string, typically JSON, representing the configuration.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.ChangeDefaultCurrency(System.String)">
            <summary>
            Changes the merchant default currency.
            </summary>
            <param name="newDefaultCurrencyCode">The new default currency code.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.AddTax(System.String,System.String,System.Decimal,System.String)">
            <summary>
            Add a new merchant  tax.
            </summary>
            <param name="name">The tax name.</param>
            <param name="code">The tax code.</param>
            <param name="rate">The tax rate.</param>
            <param name="note">The note.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.AddCustomField(System.String,RTS.Invoicing.Domain.Enums.CustomFieldsTypes)">
            <summary>
            Adds a merchant-specific custom field.
            </summary>
            <param name="name">The custom field name.</param>
            <param name="type">The custom field data type.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.GenerateNextInvoiceNumber(System.String)">
            <summary>
            Generates the next invoice number.
            </summary>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.Activate">
            <summary>
            Activates this merchant.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.Deactivate">
            <summary>
            Deactivates this merchant.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Merchant.UpdateTaxDetails(RTS.Invoicing.Domain.Entities.Merchants.TaxId,System.String,System.String,System.Decimal,System.String)">
            <summary>
            Updates the tax details.
            </summary>
            <param name="taxId">The tax identifier to be updated.</param>
            <param name="newName">The tax new name.</param>
            <param name="newCode">The tax new code.</param>
            <param name="newRate">The tax new rate.</param>
            <param name="note">The note.</param>
            <returns></returns>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Merchants.Tax">
            <summary>
            Represents a master tax definition.
            Tax configurations are typically scoped to a specific merchant.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Tax.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.Tax"/> class.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Tax.#ctor(RTS.Invoicing.Domain.Entities.Merchants.TaxId,RTS.Invoicing.Domain.Entities.Merchants.MerchantId,System.String,System.String,System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Merchants.Tax"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="merchantId">The merchant identifier.</param>
            <param name="name">The name.</param>
            <param name="code">The code.</param>
            <param name="rate">The rate.</param>
            <param name="notes">The notes.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Tax.MerchantId">
            <summary>
            Gets or sets the unique identifier of the merchant who defined this tax.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Tax.Name">
            <summary>
            Gets or sets the human-readable name of the tax (e.g., "Value Added Tax", "State Sales Tax").
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Tax.Code">
            <summary>
            Gets or sets the short code or abbreviation for the tax (e.g., "VAT", "GST").
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Tax.Rate">
            <summary>
            Gets or sets the fractional rate of the tax (e.g., 0.15 for 15%).
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Merchants.Tax.IsActive">
            <summary>
            Gets or sets a value indicating whether this tax definition is currently active and can be applied to new invoices.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Tax.Create(RTS.Invoicing.Domain.Entities.Merchants.MerchantId,System.String,System.String,System.Decimal,System.String)">
            <summary>
            Creates the specified merchant identifier.
            </summary>
            <param name="merchantId">The merchant identifier.</param>
            <param name="name">The name.</param>
            <param name="code">The code.</param>
            <param name="rate">The rate.</param>
            <param name="notes">The notes.</param>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Tax.Deactivate">
            <summary>
            Deactivates this instance.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Tax.Activate">
            <summary>
            Activates this instance.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Tax.ApplyTax(System.Decimal)">
            <summary>
            Applies the current tax to the specified amount.
            </summary>
            <param name="amount">The amount to apply the tax on.</param>
            <returns>The new calculated amount.</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Merchants.Tax.UpdateNotes(System.String)">
            <summary>
            Updates the tax notes.
            </summary>
            <param name="notes">The notes.</param>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Payments.Enums.PaymentStatus">
            <summary>
            Represents the status of a single payment.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Payments.Enums.PaymentStatus.Pending">
            <summary>
            The payment process has been initiated but is not yet confirmed.
            This is the initial, non-terminal state.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Payments.Enums.PaymentStatus.Succeeded">
            <summary>
            The payment was successfully processed.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Payments.Enums.PaymentStatus.Failed">
            <summary>
            The payment could not be processed (e.g., declined card, insufficient funds).
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Payments.Enums.PaymentStatus.Cancelled">
            <summary>
            The payment was explicitly cancelled by a user or the system before completion. 
            This is a terminal state.
            </summary>
        </member>
        <member name="F:RTS.Invoicing.Domain.Entities.Payments.Enums.PaymentStatus.Expired">
            <summary>
            The payment was not completed within the allowed time frame. This is a terminal state.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.Entities.Payments.Payment">
            <summary>
            Represents a recorded payment transaction against a specific invoice.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Payments.Payment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Payments.Payment"/> entity.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Payments.Payment.#ctor(RTS.Invoicing.Domain.Entities.Payments.PaymentId,RTS.Invoicing.Domain.Entities.Invoices.InvoiceId,RTS.Invoicing.Domain.ValueObjects.Money,System.String,System.String,System.DateTime,RTS.Invoicing.Domain.Entities.Payments.Enums.PaymentType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RTS.Invoicing.Domain.Entities.Payments.Payment"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="invoiceId">The invoice identifier.</param>
            <param name="amount">The payment amount.</param>
            <param name="method">The payment method.</param>
            <param name="currencyCode">The currency code.</param>
            <param name="date">The date of the payment.</param>
            <param name="type">The payment type.</param>
            <param name="transactionReference">The transaction reference.</param>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.InvoiceId">
            <summary>
            Gets or sets the foreign key referencing the parent Invoice entity.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.Amount">
            <summary>
            Gets or sets the monetary amount of the payment recorded.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.Method">
            <summary>
            Gets or sets the method used for the payment (e.g., "Credit Card", "Bank Transfer", "Cash").
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.CurrencyCode">
            <summary>
            Gets or sets the three-letter ISO 4217 currency code for the payment amount (e.g., "YER", "USD", "SAR").
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.Date">
            <summary>
            Gets or sets the date and time when the payment was received or processed.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.Type">
            <summary>
            Gets or sets the type of payment.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.Status">
            <summary>
            Gets or sets the current status of the payment (e.g., 'Pending', 'Succeeded', 'Failed').
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.TransactionReference">
            <summary>
            Gets or sets the unique reference number provided by the payment processor or bank.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.Notes">
            <summary>
            Gets or sets any optional notes related to the payment.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.Entities.Payments.Payment.ConcurrencyToken">
            <summary>
            Gets or sets the concurrency token (RowVersion) used for optimistic locking.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Payments.Payment.UpdateNotes(System.String)">
            <summary>
            Updates the payment notes.
            </summary>
            <param name="notes">The notes.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Payments.Payment.MarkAsSucceeded">
            <summary>
            Marks as succeeded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.Entities.Payments.Payment.MarkAsFailed(System.String)">
            <summary>
            Marks as failed.
            </summary>
            <param name="reason">The reason of failure.</param>
            <returns></returns>
        </member>
        <member name="F:RTS.Invoicing.Domain.Errors.CreditNoteErrors.InvalidOriginal">
            <summary>
            The invalid original.
            </summary>
        </member>
        <member name="T:RTS.Invoicing.Domain.ValueObjects.Email">
            <summary>
            Represents an Email address as a Value Object, ensuring immutability and enforcing validation rules upon creation.
            </summary>
        </member>
        <member name="P:RTS.Invoicing.Domain.ValueObjects.Email.Value">
            <summary>
            Gets the validated, immutable string value of the email address.
            </summary>
        </member>
        <member name="M:RTS.Invoicing.Domain.ValueObjects.Email.#ctor(System.String)">
            <summary>
            Initializes a new, valid instance of the <see cref="T:RTS.Invoicing.Domain.ValueObjects.Email"/> Value Object. 
            It is private to force consumers to use the static <see cref="M:RTS.Invoicing.Domain.ValueObjects.Email.Create(System.String)"/> method.
            </summary>
            <param name="value">The validated email string.</param>
        </member>
        <member name="M:RTS.Invoicing.Domain.ValueObjects.Email.Create(System.String)">
            <summary>
            Factory method used to safely instantiate an <see cref="T:RTS.Invoicing.Domain.ValueObjects.Email"/> object, performing necessary validation.
            </summary>
            <param name="email">The email string to validate and create.</param>
            <returns>A <see cref="T:RTS.Invoicing.Domain.Common.Result`1"/> containing the new <see cref="T:RTS.Invoicing.Domain.ValueObjects.Email"/> object on success, or an <see cref="T:RTS.Invoicing.Domain.Common.Error"/> on failure.</returns>
        </member>
        <member name="M:RTS.Invoicing.Domain.ValueObjects.Email.op_Implicit(RTS.Invoicing.Domain.ValueObjects.Email)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:RTS.Invoicing.Domain.ValueObjects.Email"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="email">The email Value Object.</param>
            <returns>The string value of the email.</returns>
        </member>
    </members>
</doc>
