syntax = "proto3";

option csharp_namespace = "Infrastructure";

package accounting;

// The accounting service definition.
service Accounting {
  // create reservation service
  rpc CreateWithdrawal (CreateWithdrawalCommand) returns (CreateWithdrawalReply);
  rpc WithdrawalAcknowledgeCompletion (WithdrawalAcknowledgeCompletionCommand) returns (WithdrawalAcknowledgeCompletionReply);
  rpc AddVoucherTransaction(VoucherTransactionCommand) returns (AddVoucherTransactionReply);
  rpc CreateDepositing (CreateDepositCommand) returns (CreateDepositReply);
  rpc DepositingAcknowledgeCompletion (DepositAcknowledgeCompletionCommand) returns (DepositAcknowledgeCompletionReply);
  rpc QueryBalance (QueryBalanceCommand) returns (QueryBalanceReply);    
  rpc UpdateTransactionStatus(UpdateTransactionStatusCommand) returns (UpdateTransactionStatusReply);  
  rpc SaveVoucherTransaction(VoucherTransactionCommand2) returns (AddVoucherTransactionReply); 
  rpc SaveVoucherTransactions(SaveVoucherTransactionCommand) returns (AddVoucherTransactionReply); 
  
  
  rpc CreateTransAdjustment(TransAdjustmentCommand) returns (TransAdjustmentReplay);
  rpc CreateTransReverse(TransReverseCommand) returns (TransReverseReplay);
  
}

// The request message containing the reservation request.
message CreateDepositCommand {
  string ProfileId = 1;
  string Amount = 2;
  string Currency = 3;
  string CompanyCode = 4;
  string ServiceCode = 5;
  string TransactionReference = 6;
  //string TransactionType = 7;
  string TransactionSubType = 8;
  string TransactionDate = 9;
  string RequestId = 10;
  string CreatedBy = 11;
  string ClientId = 12;
  string ServiceType = 13;
}

// The response message containing the reservation result.
message CreateDepositReply {
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
}
// The request message containing the aknowledgemet request.
message DepositAcknowledgeCompletionCommand {
  string ProfileId = 1;
  string Amount = 2;
  string Currency = 3;
  string Status = 4;
  string RequestId = 5;
  string TransactionReference = 6;
}

// The response message containing the aknowledgemet result.
message DepositAcknowledgeCompletionReply {
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
  string status = 4;
  string balance = 5;
  string DepositAvailableBalance = 6;
  string DepositOnHold = 7;
}




// The request message containing the reservation request.
message CreateWithdrawalCommand {
  string ProfileId = 1;
  string Amount = 2;
  string Currency = 3;
  string CompanyCode = 4;
  string ServiceCode = 5;
  string TransactionReference = 6;
  //string TransactionType = 7;
  string TransactionSubType = 8;
  string TransactionDate = 9;
  string RequestId = 10;
  string CreatedBy = 11;
  string ClientId = 12;
  string ServiceType = 13;
}

// The response message containing the reservation result.
message CreateWithdrawalReply {
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
}
// The request message containing the aknowledgemet request.
message WithdrawalAcknowledgeCompletionCommand {
  string ProfileId = 1;
  string Amount = 2;
  string Currency = 3;
  string Status = 4;
  string RequestId = 5;
  string TransactionReference = 6;
}

// The response message containing the aknowledgemet result.
message WithdrawalAcknowledgeCompletionReply {
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
  string status = 4;
  string balance = 5;
  string WithdrawalAvailableBalance = 6;
  string WithdrawalOnHold = 7;
}

// The request message containing the save voucher transaction request.
message VoucherTransactionCommand {
  string SourceReference = 1;
  string TargetReference = 2;
  string Amount = 3;
  string CurrencyCode = 4;
  string Status = 5;
  string RequestId = 6;
  string TransactionId = 7;
  string CompanyCode = 8;
  string ServiceCode = 9;
  string ServiceType = 10;
  string TransactionType = 11;
  string TransactionSubType = 12;
  string SourceProfileId = 13;
  string TargetProfileId  = 14;
  string RequestTime = 15;
  string Details = 16;
  string ClientId = 17; 
  string FeesTotal = 18;
  string FeesDetails = 19;
  string CommissionTotal =20;
  string CommissionDetails = 21;
  string ExtraTotal = 22;
  string ExtraDetails = 23;
  string ServicingIdentity = 24;
  string OneTimeCode = 25;
}

// The request message containing the save voucher transaction request with additional details
message VoucherTransactionCommand2 {
  string SourceReference = 1;
  string TargetReference = 2;
  string Amount = 3;
  string CurrencyCode = 4;
  string Status = 5;
  string RequestId = 6;
  string TransactionId = 7;
  string CompanyCode = 8;
  string ServiceCode = 9;
  string ServiceType = 10;
  string TransactionType = 11;
  string TransactionSubType = 12;
  string SourceProfileId = 13;
  string TargetProfileId  = 14;
  string RequestTime = 15;
  string Details = 16;
  string ClientId = 17; 
  string FeesTotal = 18;
  string FeesDetails = 19;
  string CommissionTotal =20;
  string CommissionDetails = 21;
  string ExtraTotal = 22;
  string ExtraDetails = 23;
  string ServicingIdentity = 24;
  string OneTimeCode = 25;
  string SenderDetails = 26;
  string ReceiverDetails = 27;
  string BranchId = 28;
  string PurposeDetails = 29;
  string Statement = 30;
  string Notes = 31;
}

message SaveVoucherTransactionCommand{
  string SourceReference = 1;
  string TargetReference = 2;
  string Amount = 3;
  string CurrencyCode = 4;
  string Status = 5;
  string RequestId = 6;
  string TransactionId = 7;
  string CompanyCode = 8;
  string ServiceCode = 9;
  string ServiceType = 10;
  string CustomerAmount = 11;
  string CustomerTransactionType = 12;
  string CustomerTransactionSubType = 13;
  string ProviderAmount = 14;
  string ProviderTransactionType = 15;
  string ProviderTransactionSubType = 16;
  string SourceProfileId = 17;
  string TargetProfileId  = 18;
  string RequestTime = 19;
  string Details = 20;
  string ClientId = 21; 
  string FeesTotal = 22;
  string FeesCurrency = 23;
  string FeesDetails = 24;
  string CommissionTotal =25;
  string CommissionCurrency = 26;
  string CommissionDetails = 27;
  string ExtraTotal = 28;
  string ExtraCurrency = 29;
  string ExtraDetails = 30;
  string ServicingIdentity = 31;
  string OneTimeCode = 32;
  string SenderDetails = 33;
  string ReceiverDetails = 34;
  string BranchId = 35;
  string PurposeDetails = 36;
  string Statement = 37;
  string Notes = 38;
  string CustomerStatement = 39;
  string ProviderStatement = 40;
}
// The response message containing that save transaction result.
message AddVoucherTransactionReply {
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
  string VoucherTransactionId = 4;
  
}

// The request message containing the query balance request.
message QueryBalanceCommand {
  string profileId = 1;
  string currency = 2;
}

// The response message containing the balance info.
message QueryBalanceReply {
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
  string balance = 4;
  string WithdrawalAvailableBalance = 5;
  string WithdrawalOnHold = 6;
  string DepositAvailableBalance = 7;
  string DepositOnHold = 8;
}

// The request message containing the TransactionLimit info.
message UpdateTransactionStatusCommand {
  string profileId = 1;
  string status = 2;
  string RequestId = 3;
  string TransactionReference = 4;
}

// The response message containing the TransactionLimit info.
message UpdateTransactionStatusReply {
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
}


message TransAdjustmentCommand{
  string CustomerProfileId = 1;
  string ProviderProfileId = 2;
  string CurrencyCode=3;
  string ProviderAmount = 4;
  string CustomerAmount = 5;
  string Status = 6;
  string OriginalRequestId = 7;
  string OriginalTransactionReference = 8;
  string CreatedBy = 9;
  string RequestTime = 10;  
  string TransAdjustmentType = 11;
  string RequestId = 12;
  string TransactionReference = 13;
  string ClientId = 14;
  string CompanyCode = 15;
  string ServiceCode = 16;
  string ServiceType = 17;
}
message TransAdjustmentReplay{
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
}

message TransReverseCommand{
  string CustomerProfileId = 1;
  string ProviderProfileId = 2;
  string CurrencyCode=3;
  string ProviderAmount = 4;
  string CustomerAmount = 5;
  string Status = 6;
  string OriginalRequestId = 7;
  string OriginalTransactionReference = 8;
  string CreatedBy = 9;
  string RequestTime = 10;  
  string TransAdjustmentType = 11;
  string RequestId = 12;
  string TransactionReference = 13;
  string ClientId = 14;
  string CompanyCode = 15;
  string ServiceCode = 16;
  string ServiceType = 17;
}
message TransReverseReplay{
  string Success = 1;
  string ResponseCode = 2;
  string Message = 3;
}
