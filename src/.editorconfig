# The settings in this file are applied to all files in this directory and subdirectories,
# unless overridden by another .editorconfig file.
root = true

# ======================================================================
# Global Settings (Apply to all file types)
# ======================================================================
[*]
end_of_line = crlf
charset = utf-8
insert_final_newline = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4

# ======================================================================
# C# File Settings
# ======================================================================
[*.cs]

# ----------------------------------------------------------------------
# 1. Indentation and Spacing Rules
# ----------------------------------------------------------------------
indent_style = space
indent_size = 4
tab_width = 4

# ----------------------------------------------------------------------
# 2. Core Formatting Rules
# ----------------------------------------------------------------------
# Enforce a maximum line length to improve readability.
# Severity: error - The build will fail if a line is too long.
max_line_length = 120:error

# Force parameter lists to wrap so each parameter is on a new line.
csharp_constructor_declaration_parameter_list_wrapping = wrap_every_item:error
csharp_method_declaration_parameter_list_wrapping = wrap_every_item:error
csharp_method_call_argument_list_wrapping = wrap_every_item:error
csharp_operator_declaration_parameter_list_wrapping = wrap_every_item:warning


# ----------------------------------------------------------------------
# 3. C# Code Style Rules (Modern C#)
# ----------------------------------------------------------------------
# Prefer file-scoped namespaces for cleaner, less indented code.
csharp_style_namespace_declarations = file_scoped:error

# Enforce that using directives are placed outside of the namespace.
csharp_using_directive_placement = outside_namespace:error

# Prefer 'var' when the type is apparent.
csharp_style_var_when_type_is_apparent = true:error

# Always require braces for statements (if, else, for, etc.). Prevents bugs.
csharp_prefer_braces = true:error


dotnet_code_quality_unused_parameters = all:error


# Require the use of 'this.' when accessing instance members to avoid ambiguity.
dotnet_style_qualification_for_field = true:none # TODO: make this error after discussing with the team.
dotnet_style_qualification_for_property = true:error
dotnet_style_qualification_for_method = true:error

# Prefer modern C# patterns like null-coalescing and null-propagation.
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion</code></pre></div></div><div class="gl-flex"><div class="line-numbers gl-mr-3 !gl-p-0 gl-text-transparent"></div> <div class="gl-w-full"><pre class="code highlight gl-m-0 gl-w-full !gl-overflow-visible !gl-border-none !gl-p-0 gl-leading-0"><code data-testid="content" class="line !gl-whitespace-pre-wrap gl-ml-1">
# Warn if a private field can be made 'readonly'.
dotnet_style_readonly_field = true:suggestion

dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_namespace_match_folder = true:error
dotnet_style_explicit_tuple_names = true:suggestion

dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
dotnet_style_require_accessibility_modifiers = all:silent

# Prefer expression-bodied members for simple, single-line implementations.
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_methods = false:silent # Methods can be complex; avoid forcing this.

csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_space_around_binary_operators = before_and_after
csharp_prefer_simple_using_statement = true:warning

csharp_prefer_system_threading_lock = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_implicitly_typed_lambda_expression = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_prefer_static_anonymous_function = true:suggestion
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion


# ----------------------------------------------------------------------
# 4. C# Naming Convention Rules
# ----------------------------------------------------------------------

# Rule: Private instance fields must be prefixed with an underscore (_) and be camelCase.
dotnet_naming_rule.private_fields_should_be_camel_case_with_underscore.severity = error
dotnet_naming_rule.private_fields_should_be_camel_case_with_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_should_be_camel_case_with_underscore.style = camel_case_with_underscore

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_style.camel_case_with_underscore.required_prefix = _
dotnet_naming_style.camel_case_with_underscore.capitalization = camel_case

# Rule: Interfaces must start with 'I'.</code></pre></div></div><div class="gl-flex"><div class="line-numbers gl-mr-3 !gl-p-0 gl-text-transparent"></div> <div class="gl-w-full"><pre class="code highlight gl-m-0 gl-w-full !gl-overflow-visible !gl-border-none !gl-p-0 gl-leading-0"><code data-testid="content" class="line !gl-whitespace-pre-wrap gl-ml-1">dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.capitalization = pascal_case


# ----------------------------------------------------------------------
# 5. .NET Code Quality Rules (Roslyn Analyzers)
# ----------------------------------------------------------------------
# These rules help identify potential bugs, performance issues, and bad practices.

# Warn about unnecessary 'using' directives.
dotnet_diagnostic.IDE0005.severity = error

# Warn about unused parameters in methods.
dotnet_diagnostic.IDE0060.severity = error

# Warn about unused parameters in methods.
dotnet_diagnostic.IDE0009.severity = none # TODO: make this error after discussing with the team.

# 
dotnet_diagnostic.CA1724.severity = error

# Warn if a class member can be made 'static'.
dotnet_diagnostic.CA1822.severity = suggestion

# CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.CS8632.severity = none

# CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.CS8632.severity = none

# CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.CS8632.severity = none

# CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.CS8632.severity = none


# ----------------------------------------------------------------------
# 6. StyleCop Analyzer Rules
# ----------------------------------------------------------------------
# These rules enforce a stricter and more consistent code layout and style.

# SA0001: All diagnostics of XML documentation comments has been disabled due to the current project configuration.
dotnet_diagnostic.SA0001.severity = none

# SA1101: Prefix local calls with this (complements our 'this.' requirement).
dotnet_diagnostic.SA1101.severity = none # TODO: make this error after discussing with the team.

# SA1101: The parameters to a C# method or indexer call or declaration span across multiple lines, but the first parameter does not start on the line after the opening bracket.
dotnet_diagnostic.SA1116.severity = error

# SA1101: The parameters to a C# method or indexer call or declaration are not all on the same line or each on a separate line.
dotnet_diagnostic.SA1117.severity = error

# SA1200: Using directives should be placed correctly (at the top of the file).
dotnet_diagnostic.SA1200.severity = error

# SA1201: 
dotnet_diagnostic.SA1201.severity = none # TODO: make this error after understanding the rule.

# SA1309: Field names should not begin with underscore.
# We explicitly disable this rule because our naming convention REQUIRES it.
dotnet_diagnostic.SA1309.severity = none

# SA1402: File may only contain a single type (class, interface, etc.).</code></pre></div></div><div class="gl-flex"><div class="line-numbers gl-mr-3 !gl-p-0 gl-text-transparent"></div> <div class="gl-w-full"><pre class="code highlight gl-m-0 gl-w-full !gl-overflow-visible !gl-border-none !gl-p-0 gl-leading-0"><code data-testid="content" class="line !gl-whitespace-pre-wrap gl-ml-1">dotnet_diagnostic.SA1402.severity = error

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none

# SA1600: Elements should be documented.
# Set to 'none' by default to avoid overwhelming the team.
# Change to 'suggestion' or 'warning' for a stricter documentation policy.
dotnet_diagnostic.SA1600.severity = error

# SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = none

# SA1633: File should have a header.
# Disabled by default. Can be enabled if the team uses file headers.
dotnet_diagnostic.SA1633.severity = none

# VSSpell001: Spell Check
dotnet_diagnostic.VSSpell001.severity = suggestion

csharp_indent_labels = one_less_than_current
csharp_style_prefer_method_group_conversion = true:silent
